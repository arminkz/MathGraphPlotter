<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:local="clr-namespace:AKP_Math_Graph_Plotter"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
   
    <local:FuncInConverter x:Key="FuncInCON" />
    <local:FuncOutConverter x:Key="FuncOutCON" />
    <local:FuncRuleConverter x:Key="FuncRuleCON" />

    <local:VisibilityBoolConverter x:Key="VisibilityBoolConverter" />
    <local:VisibilityShapeType x:Key="VisibilityShapeType" />
    <local:VisibilityEqType x:Key="VisibilityEqType" />
    <local:VisibilityIfAvaliable x:Key="VisibilityIfAvaliable" />
    
    <local:EnumBoolConverter x:Key="EnumBoolConverter" />

    <local:MathSymbolConverter x:Key="MathSymbolCON" />
    <local:RowCounter x:Key="RowNumberConverter" />
    <local:DoubleCollectionToString x:Key="DoubleCollectionToString" />
    <local:StringCollectionToString x:Key="StringCollectionToString" />
    <local:ShapeTypeConverter x:Key="ShapeTypeConverter" />
    <local:OvConverter x:Key="OvConverter" />

    <local:BorderClipConverter x:Key="BorderClipConverter"/>


    <ObjectDataProvider x:Key="ShapeEnum"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="local:ShapeType" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <!-- Custom TextBox -->
    <ControlTemplate x:Key="NormalTextBoxBase" TargetType="{x:Type TextBoxBase}">
        <Border x:Name="Bd" SnapsToDevicePixels="True" 
          Background="{TemplateBinding Background}" 
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}" >
            <ScrollViewer x:Name="PART_ContentHost" 
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="Bd" 
            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="Foreground" 
           Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="NormalTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Template" Value="{DynamicResource NormalTextBoxBase}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="/AKP Math Graph Plotter;component/Fonts/#Segoe UI" />
    </Style>

    <Style x:Key="SmallTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Template" Value="{DynamicResource NormalTextBoxBase}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontFamily" Value="/AKP Math Graph Plotter;component/Fonts/#Segoe UI" />
    </Style>

    <!-- Custom TextBlock -->
    <Style x:Key="NormalTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="/AKP Math Graph Plotter;component/Fonts/#Segoe UI" />
    </Style>

    <Style x:Key="SmallTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontFamily" Value="/AKP Math Graph Plotter;component/Fonts/#Segoe UI" />
    </Style>

    <Style x:Key="BoldTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="/AKP Math Graph Plotter;component/Fonts/#Segoe UI" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="FarsiTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FlowDirection" Value="RightToLeft" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Mitra" />
    </Style>

    <Style x:Key="FarsiSmallTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FlowDirection" Value="RightToLeft" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Mitra" />
    </Style>
    
    <Style x:Key="FarsiBoldTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FlowDirection" Value="RightToLeft" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" />
    </Style>

    <!-- Pencil Button -->
    <Style x:Key="PencilImage" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Pencil.png"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/PencilMO.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PencilButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel>
                        <Image Style="{StaticResource PencilImage}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTip">
            <Setter.Value>
                <Run Text="رسم نمودار" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Mitra" FontSize="14"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Options Button -->
    <Style x:Key="OptionsImage" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Options.png"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/OptionsMO.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="OptionsButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel>
                        <Image Style="{StaticResource OptionsImage}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTip">
            <Setter.Value>
                <Run Text="تنظیمات رسم" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Mitra" FontSize="14"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Copy Button -->
    <Style x:Key="CopyImage" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Copy.png"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/CopyMO.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CopyButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel>
                        <Image Style="{StaticResource CopyImage}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTip">
            <Setter.Value>
                <Run Text="کپی" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Mitra" FontSize="14"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Play Button -->
    <Style x:Key="PlayButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel>
                        <Image Style="{StaticResource PlayImage}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PlayImage" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Play.png"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/PlayMO.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Pause Button -->
    <Style x:Key="PauseButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel>
                        <Image Style="{StaticResource PauseImage}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PauseImage" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Pause.png"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/PauseMO.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Object Addder -->
    <DataTemplate x:Key="AddNewObject">
        <Border MinHeight="70" HorizontalAlignment="Stretch">

            <Grid Background="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Name="SubBorder" Grid.Column="0" BorderThickness="0,0,1,0" >
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDEDEDE" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FBFBFB" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <StackPanel>
                        <TextBlock Name="EqCount" Margin="3,1.5,0,0" 
                                   FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource RowNumberConverter}">
                                    <Binding/>
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="MathObjList" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                </Border>
                <Grid Grid.Column="1" Background="Transparent" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{x:Static local:MainWindow.AddCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <!-- Equation Template -->
    <DataTemplate x:Key="EquationNormal">
        <Border BorderThickness="0,0,0,1" MinHeight="70" HorizontalAlignment="Stretch" BorderBrush="#FFAA9696" >
            <Grid Background="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
            
                <Border Name="SubBorder" Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="#FFDEDEDE" >
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                    <Setter Property="Background" Value="#FBFBFB">
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Color="#FFFFE800" Offset="0" />
                                                <GradientStop Color="Orange" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Border.ToolTip>
                        <ToolTip Background="#FFFFA9A9" MaxWidth="200">
                            <TextBlock Text="{Binding Inner.ErrorMsg}" Style="{StaticResource FarsiTextBlock}" TextWrapping="Wrap"  />
                            <ToolTip.Style>
                                <Style TargetType="ToolTip">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToolTip.Style>
                        </ToolTip>
                    </Border.ToolTip>
                    <Grid>
                        <TextBlock Name="EqCount" Margin="3,1.5,0,0" FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource RowNumberConverter}">
                                    <Binding/>
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="MathObjList" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Image Width="20" Height="20" VerticalAlignment="Center" Margin="0,2,0,0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Error.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </Border>

                <Grid Grid.Column="1"  Margin="0,3,3,3">
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*" />
                        <RowDefinition Height="2*" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="15" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.ColumnSpan="2" Margin="10,10,0,0" MaxWidth="180"
                               Text="{Binding Inner.Expression,Converter={StaticResource FuncRuleCON}}" HorizontalAlignment="Left"
                               Style="{StaticResource NormalTextBlock}" TextWrapping="Wrap" />

                    <TextBlock Grid.Row="1" Margin="20,3,0,10" Style="{StaticResource SmallTextBlock}">
                            <Run Text="{Binding Path=Inner.DomainStart,Mode=OneWay,Converter={StaticResource MathSymbolCON}}" />
                            <Run Text="≤" />
                            <Run Text="{Binding Inner.Type,Converter={StaticResource FuncInCON}}" />
                            <Run Text="≤" />
                            <Run Text="{Binding Path=Inner.DomainEnd,Mode=OneWay,Converter={StaticResource MathSymbolCON}}" />
                    </TextBlock>

                    <TextBlock Grid.Row="1" Grid.Column="1" Margin="15,3,0,10" 
                               Visibility="{Binding Inner,Converter={StaticResource VisibilityEqType}}"
                               Style="{StaticResource SmallTextBlock}">
                            <Run Text="{Binding Path=Inner.SecondDomainStart,Mode=OneWay,Converter={StaticResource MathSymbolCON}}" />
                            <Run Text="≤" />
                            <Run Text="{Binding Inner.Type,Converter={StaticResource FuncInCON},ConverterParameter=Second}" />
                            <Run Text="≤" />
                            <Run Text="{Binding Path=Inner.SecondDomainEnd,Mode=OneWay,Converter={StaticResource MathSymbolCON}}" />
                    </TextBlock>

                    <Canvas Grid.Column="2" Grid.RowSpan="2" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Ellipse Width="32" Height="32" Fill="{Binding Inner.Brush}"
                                  Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}" />
                        <Image Width="32" Height="32" VerticalAlignment="Center" 
                               Source="{Binding Converter={StaticResource OvConverter}}"
                               Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}" />
                        <Ellipse Width="32" Height="32" VerticalAlignment="Center" Stroke="LightGray" StrokeThickness="2" Fill="Transparent"
                                 Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter},ConverterParameter=Not}" />
                    </Canvas>

                    <Button Grid.Column="3" Command="{x:Static local:MainWindow.DeleteCommand}" 
                            CommandParameter="{Binding}" Style="{StaticResource CloseButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2,2,0"/>
                    
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="EquationSelected">
        <Border BorderThickness="0,0,0,1" MinHeight="70" HorizontalAlignment="Stretch" BorderBrush="#FFAA9696" 
                FocusManager.FocusedElement="{Binding ElementName=EqInput}">
            <Grid Background="LightGray">
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Name="SubBorder" Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="#FFDEDEDE" Background="LightGray" >
                    <Border.ToolTip>
                        <ToolTip Background="#FFFFA9A9" MaxWidth="200">
                            <TextBlock Text="{Binding Inner.ErrorMsg}" Style="{StaticResource FarsiTextBlock}" TextWrapping="Wrap"/>
                            <ToolTip.Style>
                                <Style TargetType="ToolTip">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToolTip.Style>
                        </ToolTip>
                    </Border.ToolTip>
                    <Grid>
                        <TextBlock Name="EqCount" Margin="3,1.5,0,0" FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource RowNumberConverter}">
                                    <Binding/>
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="MathObjList" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Image Width="20" Height="20" VerticalAlignment="Center" Margin="0,2,0,0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Innner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Error.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </Border>

                <Grid Background="White" Grid.Column="1"  Margin="0,3,3,3">
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*" />
                        <RowDefinition Height="2*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="15" />
                    </Grid.ColumnDefinitions>

                    <TextBox Name="EqInput" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="180" Margin="10,10,0,0"
                             Text="{Binding Inner.Expression,UpdateSourceTrigger=PropertyChanged}" 
                             Style="{StaticResource NormalTextBox}" TextWrapping="Wrap"  ScrollViewer.CanContentScroll="False" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:InvokeCommandAction Command="{x:Static local:MainWindow.EqExpChangedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" 
                                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" />
                        </TextBox.InputBindings>
                    </TextBox>

                    <StackPanel Grid.Row="1" Margin="20,3,0,10" Orientation="Horizontal">
                        <TextBox Style="{StaticResource SmallTextBox}"
                                 Text="{Binding Path=Inner.DomainStart,Converter={StaticResource MathSymbolCON}, UpdateSourceTrigger=Default}" />
                        <TextBlock Text="≤ " Style="{StaticResource SmallTextBlock}" />
                        <TextBlock Style="{StaticResource SmallTextBlock}"
                                 Text="{Binding Inner.Type,Converter={StaticResource FuncInCON}}" />
                        <TextBlock Text=" ≤" Style="{StaticResource SmallTextBlock}" />
                        <TextBox Style="{StaticResource SmallTextBox}"
                                 Text="{Binding Path=Inner.DomainEnd,Converter={StaticResource MathSymbolCON}, UpdateSourceTrigger=Default}" />
                    </StackPanel>

                    <StackPanel Grid.Row="1" Grid.Column="1" Margin="20,3,0,10" Orientation="Horizontal"
                                Visibility="{Binding Inner,Converter={StaticResource VisibilityEqType}}">
                        <TextBox Style="{StaticResource SmallTextBox}"
                                 Text="{Binding Path=Inner.SecondDomainStart,Converter={StaticResource MathSymbolCON}, UpdateSourceTrigger=Default}" />
                        <TextBlock Text="≤ " Style="{StaticResource SmallTextBlock}" />
                        <TextBlock Style="{StaticResource SmallTextBlock}"
                                 Text="{Binding Inner.Type,Converter={StaticResource FuncInCON},ConverterParameter=Second}" />
                        <TextBlock Text=" ≤" Style="{StaticResource SmallTextBlock}" />
                        <TextBox Style="{StaticResource SmallTextBox}"
                                 Text="{Binding Path=Inner.SecondDomainEnd,Converter={StaticResource MathSymbolCON}, UpdateSourceTrigger=Default}" />
                    </StackPanel>

                    <Canvas Grid.Column="2" Grid.RowSpan="2" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Ellipse Width="32" Height="32" Fill="{Binding Inner.Brush}"
                                  Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.ChangeVisibilityCommand}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Ellipse>
                        <Image Width="32" Height="32" VerticalAlignment="Center" 
                               Source="{Binding Converter={StaticResource OvConverter}}"
                               Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.ChangeVisibilityCommand}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Image>
                        <Ellipse Width="32" Height="32" VerticalAlignment="Center" Stroke="LightGray" StrokeThickness="2" Fill="Transparent"
                                 Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter},ConverterParameter=Not}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.ChangeVisibilityCommand}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Ellipse>
                    </Canvas>

                    <Button Grid.Column="3" Command="{x:Static local:MainWindow.DeleteCommand}" 
                            CommandParameter="{Binding}" Style="{StaticResource CloseButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2,2,0"/>

                    <Border Grid.Row="2" Grid.ColumnSpan="3" Background="White" >
                        <Border.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Inner.IC}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="0" To="40" Duration="00:00:0.4"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <WrapPanel Grid.Column="0" Orientation="Horizontal">
                                <Button Style="{StaticResource PencilButton}" Margin="14,8,0,0" 
                                        Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding}" />
                                <Button Style="{StaticResource OptionsButton}" Margin="14,8,0,0" 
                                        Command="{x:Static local:MainWindow.OpenOptionCommand}" CommandParameter="{Binding}" />
                            </WrapPanel>

                            <WrapPanel Grid.Column="1" Orientation="Horizontal" FlowDirection="RightToLeft" >
                                <Button Style="{StaticResource CopyButton}" Margin="32,8,0,0"
                                        Command="{x:Static local:MainWindow.CopyCommand}" CommandParameter="{Binding}"/>
                            </WrapPanel>

                            <Popup x:Name="OptionsPopup" Placement="Center" IsOpen="{Binding IsOptionOpen}" PopupAnimation="Scroll" AllowsTransparency="True"
                                   PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}" >

                                <!-- Draggable Popup -->
                                <i:Interaction.Behaviors>
                                    <local:MouseDragPopupBehavior/>
                                </i:Interaction.Behaviors>

                                <Border BorderBrush="Black" BorderThickness="1" CornerRadius="10" Height="300" Width="400" Background="WhiteSmoke">

                                    <!--Clipper-->
                                    <Border CornerRadius="10">
                                        <Border.Clip>
                                            <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                                <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}"/>
                                            </MultiBinding>
                                        </Border.Clip>

                                        <Grid>
                                            <!-- Popup Close Button -->
                                            <Button Style="{StaticResource CloseButton}" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                    Command="{x:Static local:MainWindow.OpenOptionCommand}" CommandParameter="{Binding}" Margin="7,7,0,0" Panel.ZIndex="1" />

                                            <TabControl FlowDirection="RightToLeft" Panel.ZIndex="0" Margin="0,-3,-3,0">
                                                
                                                <TabItem>
                                                    <TabItem.Header>
                                                        <TextBlock Text="تنظیمات تابع" Style="{StaticResource FarsiTextBlock}" Margin="2,3,0,0"/>
                                                    </TabItem.Header>

                                                    <Grid Margin="0,10,0,0">

                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>

                                                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"
                                                                   Text="دامنه و برد" Style="{StaticResource FarsiTextBlock}" Foreground="DarkGray"
                                                                   Margin="20,10,0,0"/>
    
                                                        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"
                                                                   Style="{StaticResource FarsiTextBlock}" 
                                                                   Margin="30,5,0,0"><Run Text="دامنه ی متغییر اول ("/><Run Text="{Binding Inner.Type,Converter={StaticResource FuncInCON}}"/><Run Text=") :"/>
                                                        </TextBlock>

                                                        <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Margin="10,5,0,0"
                                                                    Orientation="Horizontal" FlowDirection="LeftToRight">
                                                            <TextBox Margin="0,0,5,0" MinWidth="40" Text="{Binding Inner.DomainStart,Converter={StaticResource MathSymbolCON}, UpdateSourceTrigger=Default}" 
                                                                     FontSize="16" TextAlignment="Center"/>
                                                            <TextBlock Grid.Column="1"
                                                                       FontWeight="Normal" FontSize="16">
                                                                <Run Text="≤" />
                                                                <Run Text="{Binding Inner.Type,Converter={StaticResource FuncInCON}}" />
                                                                <Run Text="≤" />
                                                            </TextBlock>
                                                            <TextBox Margin="5,0,0,0" MinWidth="40" Text="{Binding Inner.DomainEnd,Converter={StaticResource MathSymbolCON},UpdateSourceTrigger=Default}" 
                                                                     FontSize="16" TextAlignment="Center" />
                                                        </StackPanel>

                                                        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"
                                                                   Style="{StaticResource FarsiTextBlock}" Visibility="{Binding Inner,Converter={StaticResource VisibilityEqType}}"
                                                                   Margin="30,10,0,0"><Run Text="دامنه ی متغییر دوم ("/><Run Text="{Binding Inner.Type,Converter={StaticResource FuncInCON},ConverterParameter=Second}"/><Run Text=") :"/>
                                                        </TextBlock>

                                                        <StackPanel Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Margin="10,10,0,0"
                                                                    Orientation="Horizontal" FlowDirection="LeftToRight" Visibility="{Binding Inner,Converter={StaticResource VisibilityEqType}}">
                                                            <TextBox Margin="0,0,5,0" MinWidth="40" Text="{Binding Inner.SecondDomainStart,Converter={StaticResource MathSymbolCON}, UpdateSourceTrigger=Default}" 
                                                                     FontSize="16" TextAlignment="Center"/>
                                                            <TextBlock Grid.Column="1"
                                                                       FontWeight="Normal" FontSize="16">
                                                                <Run Text="≤" />
                                                                <Run Text="{Binding Inner.Type,Converter={StaticResource FuncInCON},ConverterParameter=Second}" />
                                                                <Run Text="≤" />
                                                            </TextBlock>
                                                            <TextBox Margin="5,0,0,0" MinWidth="40" Text="{Binding Inner.SecondDomainEnd,Converter={StaticResource MathSymbolCON},UpdateSourceTrigger=Default}" 
                                                                     FontSize="16" TextAlignment="Center" />
                                                        </StackPanel>

                                                        <!--<TextBlock Text="دامنه و برد" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Mitra" 
                                                        FontSize="24" FontWeight="Bold"  HorizontalAlignment="Right" FlowDirection="RightToLeft"
                                               Grid.Column="1" Grid.Row="2" Margin="0,3,10,0" />

                                                        <TextBlock Text="دامنه :" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Mitra"
                                               FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="RightToLeft"
                                               Grid.Column="1" Grid.Row="3"/>

                                                        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,5,0,5">
                                                            <TextBlock Text="Except :" FontWeight="Normal" FontSize="14" Margin="5,0,5,0" />
                                                            <TextBox Text="{Binding Inner.DomainExcept,Converter={StaticResource DoubleCollectionToString}, UpdateSourceTrigger=PropertyChanged}" 
                                                 FontWeight="Normal" FontSize="16" Margin="5,0,5,0" TextAlignment="Center" MinWidth="40" />
                                                        </StackPanel>
                                                        <TextBlock Text="برد :" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Mitra"
                                               FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="RightToLeft"
                                               Grid.Column="1" Grid.Row="5"/>
                                                        <StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,5,0,5">
                                                            <TextBlock Grid.Column="1"
                                                   FontWeight="Normal" FontSize="16">
                                            <Run Text="{Binding Inner.RangeMin,Converter={StaticResource MathSymbolCON}}" />
                                            <Run Text="≤" />
                                            <Run Text="{Binding Inner.Type,Converter={StaticResource FuncOutCON}}" />
                                            <Run Text="≤" />
                                            <Run Text="{Binding Inner.RangeMax,Converter={StaticResource MathSymbolCON}}" />
                                                            </TextBlock>
                                                        </StackPanel>-->

                                                    </Grid>
                                                </TabItem>

                                                <TabItem>
                                                    <TabItem.Header>
                                                        <TextBlock Text="رنگ و قلمو" Style="{StaticResource FarsiTextBlock}" Margin="2,3,0,0"/>
                                                    </TabItem.Header>

                                                    <Grid Margin="0,10,0,0">

                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="2*"/>
                                                            <ColumnDefinition Width="3*"/>
                                                            <ColumnDefinition Width="2*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <!--Brush Viewer (Beta)-->
                                                        <Canvas Grid.Column="2" Grid.RowSpan="2" Margin="5" >
                                                            <Ellipse Width="64" Height="64" Fill="{Binding Inner.Brush}"/>
                                                            <Image Width="64" Height="64" VerticalAlignment="Center" 
                                                                   Source="{Binding Converter={StaticResource OvConverter}}"/>
                                                        </Canvas>


                                                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"
                                                                   Text="تغییر قلمو" Style="{StaticResource FarsiTextBlock}" 
                                                                   Margin="20,10,0,0"/>

                                                        <!--Brush Changer -->
                                                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" 
                                                                    VerticalAlignment="Center" HorizontalAlignment="Left" Margin="-10,10,0,0" >
                                                            <Button Padding="3" Margin="2.5"
                                                                    Command="{x:Static local:MainWindow.SetSolidColorBrushCommand}" CommandParameter="{Binding}" >
                                                                <Image Source="/AKP Math Graph Plotter;component/Images/ColorWheel.png" Width="28" Height="28" />
                                                                <Button.ToolTip>
                                                                    <ToolTip>
                                                                        <TextBlock Text="انتخاب رنگ" Style="{StaticResource FarsiSmallTextBlock}"/>
                                                                    </ToolTip>
                                                                </Button.ToolTip>
                                                            </Button>
                                                            <Button Padding="3" Margin="2.5"
                                                                    Command="{x:Static local:MainWindow.SetImageBrushCommand}" CommandParameter="{Binding}">
                                                                <Image Source="/AKP Math Graph Plotter;component/Images/Image.png" Width="28" Height="28" />
                                                                <Button.ToolTip>
                                                                    <ToolTip>
                                                                        <TextBlock Text="انتخاب تصویر" Style="{StaticResource FarsiSmallTextBlock}"/>
                                                                    </ToolTip>
                                                                </Button.ToolTip>
                                                            </Button>
                                                        </StackPanel>


                                                        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="20,10,0,0"
                                                                   Text="ضخامت :" Style="{StaticResource FarsiTextBlock}" />

                                                        <TextBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                 Margin="5,10,5,0" MinWidth="40" 
                                                                 Text="{Binding Inner.Thickness, UpdateSourceTrigger=PropertyChanged}" 
                                                                 FontSize="16"  TextAlignment="Center"/>


                                                        <Separator Grid.Row="2" Grid.ColumnSpan="3" Margin="0,10,0,0"/>


                                                        <TextBlock Grid.Row="3" Grid.Column="0" Margin="20,10,0,0"
                                                                   Text="جنس سطح 3 بعدی :" Style="{StaticResource FarsiTextBlock}" />

                                                        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal" Margin="20,15,0,0">

                                                            <RadioButton Content="کدر" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" 
                                                                         IsChecked="{Binding Inner.Material,Converter={StaticResource EnumBoolConverter},ConverterParameter=Diffuse}"/>

                                                            <RadioButton Content="براق" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" Margin="10,0,0,0"
                                                                         IsChecked="{Binding Inner.Material,Converter={StaticResource EnumBoolConverter},ConverterParameter=Specular}"/>
                                                        </StackPanel>

                                                        <TextBlock Grid.Row="4" Grid.Column="0" Margin="20,10,0,0"
                                                                   Text="شفافیت (3 بعدی) :" Style="{StaticResource FarsiTextBlock}" />

                                                        <TextBox Grid.Row="4" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                 Margin="5,10,5,0" MinWidth="40" 
                                                                 Text="{Binding Inner.Opacity, UpdateSourceTrigger=PropertyChanged}" 
                                                                 FontSize="16" TextAlignment="Center">
                                                            <TextBox.ToolTip>
                                                                <TextBlock Style="{StaticResource FarsiSmallTextBlock}" Text="شفافیت عددی بین 0 و 1 است" />
                                                            </TextBox.ToolTip>
                                                        </TextBox>

                                                    </Grid>
                                                </TabItem>

                                            </TabControl>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Popup>
                            
                        </Grid>
                    </Border>
                </Grid>

                
            </Grid>
        </Border>
    </DataTemplate>

    <!-- Variable Template -->
    <DataTemplate x:Key="VariableNormal">
        <Border BorderThickness="0,0,0,1" MinHeight="70" HorizontalAlignment="Stretch" BorderBrush="#FFAA9696" >
            <Grid Background="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Name="SubBorder" Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="#FFDEDEDE" >
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                    <Setter Property="Background" Value="#FBFBFB">
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Color="#FFFFE800" Offset="0" />
                                                <GradientStop Color="Orange" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Border.ToolTip>
                        <ToolTip Background="#FFFFA9A9" MaxWidth="200">
                            <TextBlock Text="{Binding Inner.ErrorMsg}" Style="{StaticResource FarsiTextBlock}" TextWrapping="Wrap"  />
                            <ToolTip.Style>
                                <Style TargetType="ToolTip">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToolTip.Style>
                        </ToolTip>
                    </Border.ToolTip>
                    <Grid>
                        <TextBlock Name="EqCount" Margin="3,1.5,0,0" FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource RowNumberConverter}">
                                    <Binding/>
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="MathObjList" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Image Width="20" Height="20" VerticalAlignment="Center" Margin="0,2,0,0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Error.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </Border>

                <Grid Grid.Column="1"  Margin="0,3,3,3">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="15" />
                    </Grid.ColumnDefinitions>

                    <TextBlock HorizontalAlignment="Left" Style="{StaticResource NormalTextBlock}" Margin="10,5,0,0" 
                               TextWrapping="Wrap" MaxWidth="180">
                        <Run Text="{Binding Inner.Name}" FontWeight="Bold"/><Run Text=" = "/><Run Text="{Binding Inner.Value,Converter={StaticResource MathSymbolCON}}"/>
                    </TextBlock>

                    <Grid Grid.Row="1" Margin="20,5,10,10" HorizontalAlignment="Stretch" >

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Style="{StaticResource SmallTextBlock}"  Margin="0,0,8,0" 
                                   Text="{Binding Inner.Min,Converter={StaticResource MathSymbolCON},UpdateSourceTrigger=PropertyChanged}"/>
                        <Slider Grid.Column="1" Minimum="{Binding Inner.Min}" Maximum="{Binding Inner.Max}" TickFrequency="{Binding Inner.By}"
                                Value="{Binding Inner.Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                IsSnapToTickEnabled="True" IsMoveToPointEnabled="True" MinWidth="100">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.RefreshCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>
                        <TextBlock Grid.Column="2" Style="{StaticResource SmallTextBlock}"  Margin="8,0,0,0"
                                   Text="{Binding Inner.Max,Converter={StaticResource MathSymbolCON},UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>

                    <Canvas Grid.Column="1" Grid.RowSpan="2" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">
                        
                        <Button Style="{StaticResource PlayButton}" Command="{x:Static local:MainWindow.PlayVarCommand}" CommandParameter="{Binding Inner}"
                                Visibility="{Binding Inner.Playing,Converter={StaticResource VisibilityBoolConverter},ConverterParameter=Not}"/>
                        
                        <Button Style="{StaticResource PauseButton}" Command="{x:Static local:MainWindow.PauseVarCommand}" CommandParameter="{Binding Inner}"
                                Visibility="{Binding Inner.Playing,Converter={StaticResource VisibilityBoolConverter}}"/>

                    </Canvas>

                    <Button Grid.Column="2" Command="{x:Static local:MainWindow.DeleteCommand}" 
                            CommandParameter="{Binding}" Style="{StaticResource CloseButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2,2,0"/>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="VariableSelected">
        <Border BorderThickness="0,0,0,1" MinHeight="70" HorizontalAlignment="Stretch" BorderBrush="#FFAA9696">
            <Grid Background="LightGray">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Name="SubBorder" Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="#FFDEDEDE" Background="LightGray" >
                    <Border.ToolTip>
                        <ToolTip Background="#FFFFA9A9" MaxWidth="200">
                            <TextBlock Text="{Binding ErrorMsg}" FlowDirection="RightToLeft" FontSize="16"
                                       FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Nazanin" TextWrapping="Wrap"  />
                            <ToolTip.Style>
                                <Style TargetType="ToolTip">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToolTip.Style>
                        </ToolTip>
                    </Border.ToolTip>
                    <Grid>
                        <TextBlock Name="EqCount" Margin="3,1.5,0,0" FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource RowNumberConverter}">
                                    <Binding/>
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="MathObjList" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Image Width="20" Height="20" VerticalAlignment="Center" Margin="0,2,0,0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Innner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Error.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </Border>

                <Grid Background="White" Grid.Column="1"  Margin="0,3,3,3">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="15" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"  Margin="10,5,0,0">
                        <TextBox Style="{StaticResource NormalTextBox}" Text="{Binding Inner.Name}" FontWeight="Bold"
                                 MinWidth="20" Margin="0,0,8,0" />
                        <TextBlock Style="{StaticResource NormalTextBlock}" Text="=" />
                        <TextBox Style="{StaticResource NormalTextBox}" Text="{Binding Inner.Value,Converter={StaticResource MathSymbolCON},UpdateSourceTrigger=PropertyChanged}" 
                                 MinWidth="80" Margin="8,0,0,0" />
                    </StackPanel>

                    <Grid Grid.Row="1" Margin="20,5,10,10" HorizontalAlignment="Stretch" >

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Column="0" Style="{StaticResource SmallTextBox}"  Margin="0,0,8,0" 
                                 Text="{Binding Inner.Min,Converter={StaticResource MathSymbolCON},UpdateSourceTrigger=PropertyChanged}"/>
                        <Slider Grid.Column="1" Minimum="{Binding Inner.Min}" Maximum="{Binding Inner.Max}" TickFrequency="{Binding Inner.By}"
                                Value="{Binding Inner.Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                IsSnapToTickEnabled="True" IsMoveToPointEnabled="True" MinWidth="100">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.RefreshCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>
                        <TextBox Grid.Column="2" Style="{StaticResource SmallTextBox}"  Margin="8,0,0,0"
                                 Text="{Binding Inner.Max,Converter={StaticResource MathSymbolCON},UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>

                    <Canvas Grid.Column="1" Grid.RowSpan="2" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">

                        <Button Style="{StaticResource PlayButton}" Command="{x:Static local:MainWindow.PlayVarCommand}" CommandParameter="{Binding Inner}"
                                Visibility="{Binding Inner.Playing,Converter={StaticResource VisibilityBoolConverter},ConverterParameter=Not}"/>

                        <Button Style="{StaticResource PauseButton}" Command="{x:Static local:MainWindow.PauseVarCommand}" CommandParameter="{Binding Inner}"
                                Visibility="{Binding Inner.Playing,Converter={StaticResource VisibilityBoolConverter}}"/>

                    </Canvas>

                    <Button Grid.Column="2" Command="{x:Static local:MainWindow.DeleteCommand}" 
                            CommandParameter="{Binding}" Style="{StaticResource CloseButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2,2,0"/>

                    <Border Grid.Row="2" Grid.ColumnSpan="3" Background="White">
                        <Border.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Inner.IC}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="0" To="40" Duration="00:00:0.2"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            
                            <WrapPanel Grid.Column="0" Orientation="Horizontal">
                                <Button Style="{StaticResource OptionsButton}" Margin="14,8,0,0" 
                                        Command="{x:Static local:MainWindow.OpenOptionCommand}" CommandParameter="{Binding}" />
                            </WrapPanel>

                            <WrapPanel Grid.Column="1" Orientation="Horizontal" FlowDirection="RightToLeft" >
                                <Button Style="{StaticResource CopyButton}" Margin="32,8,0,0"
                                        Command="{x:Static local:MainWindow.CopyCommand}" CommandParameter="{Binding}"/>
                            </WrapPanel>
                            
                            
                            <Popup x:Name="OptionsPopup" Placement="Center" IsOpen="{Binding IsOptionOpen}" PopupAnimation="Scroll" AllowsTransparency="True"
                                   PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}" >

                                <!-- Draggable Popup -->
                                <i:Interaction.Behaviors>
                                    <local:MouseDragPopupBehavior/>
                                </i:Interaction.Behaviors>

                                <Border BorderBrush="Black" BorderThickness="1" CornerRadius="10" Height="300" Width="400" Background="WhiteSmoke">

                                    <!--Clipper-->
                                    <Border CornerRadius="10">
                                        <Border.Clip>
                                            <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                                <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}"/>
                                            </MultiBinding>
                                        </Border.Clip>

                                        <Grid>
                                            <!-- Popup Close Button -->
                                            <Button Style="{StaticResource CloseButton}" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                    Command="{x:Static local:MainWindow.OpenOptionCommand}" CommandParameter="{Binding}" Margin="7,7,0,0" Panel.ZIndex="1" />

                                            <TabControl FlowDirection="RightToLeft" Panel.ZIndex="0" Margin="0,-3,-3,0">

                                                <TabItem>
                                                    <TabItem.Header>
                                                        <TextBlock Text="تنظیمات متغییر" Style="{StaticResource FarsiTextBlock}" Margin="2,3,0,0"/>
                                                    </TabItem.Header>

                                                    <Grid Margin="0,10,0,0">

                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"
                                                                   Text="شروع :" Style="{StaticResource FarsiTextBlock}" 
                                                                   Margin="20,10,0,0"/>

                                                        <TextBox Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                 Margin="5,10,5,0" MinWidth="40" FlowDirection="LeftToRight"
                                                                 Text="{Binding Inner.Min,Converter={StaticResource MathSymbolCON},UpdateSourceTrigger=PropertyChanged}" 
                                                                 FontSize="16" TextAlignment="Center"/>

                                                        <TextBlock Grid.Row="0" Grid.Column="2" VerticalAlignment="Center"
                                                                   Text="پایان :" Style="{StaticResource FarsiTextBlock}" 
                                                                   Margin="20,10,0,0"/>

                                                        <TextBox Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                 Margin="5,10,5,0" MinWidth="40" FlowDirection="LeftToRight"
                                                                 Text="{Binding Inner.Max,Converter={StaticResource MathSymbolCON},UpdateSourceTrigger=PropertyChanged}" 
                                                                 FontSize="16" TextAlignment="Center"/>

                                                        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"
                                                                   Text="تغییرات :" Style="{StaticResource FarsiTextBlock}" 
                                                                   Margin="20,10,0,0"/>

                                                        <TextBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                 Margin="5,10,5,0" MinWidth="40" FlowDirection="LeftToRight"
                                                                 Text="{Binding Inner.By,UpdateSourceTrigger=PropertyChanged}" 
                                                                 FontSize="16" TextAlignment="Center"/>

                                                        <TextBlock Grid.Row="1" Grid.Column="2" VerticalAlignment="Center"
                                                                   Text="وقفه (ثانیه) :" Style="{StaticResource FarsiTextBlock}" 
                                                                   Margin="20,10,0,0"/>

                                                        <TextBox Grid.Row="1" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                 Margin="5,10,5,0" MinWidth="40" FlowDirection="LeftToRight"
                                                                 Text="{Binding Inner.Duration,UpdateSourceTrigger=PropertyChanged}" 
                                                                 FontSize="16" TextAlignment="Center"/>

                                                        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"
                                                                   Text="رفتار تایمر :" Style="{StaticResource FarsiTextBlock}" 
                                                                   Margin="20,15,0,0"/>

                                                        <StackPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,20,0,0" Orientation="Horizontal" >
                                                            
                                                            <RadioButton Content="معکوس کننده" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" 
                                                                         IsChecked="{Binding Inner.TickMode,Converter={StaticResource EnumBoolConverter},ConverterParameter=AutoReverse}">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Checked">
                                                                        <i:InvokeCommandAction Command="{x:Static local:MainWindow.RefreshCommand}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </RadioButton>
                                                            
                                                            <RadioButton Content="تکرار کننده" Margin="15,0,0,0" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" 
                                                                         IsChecked="{Binding Inner.TickMode,Converter={StaticResource EnumBoolConverter},ConverterParameter=Repeat}" >
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Checked">
                                                                        <i:InvokeCommandAction Command="{x:Static local:MainWindow.RefreshCommand}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </RadioButton>
                                                            
                                                        </StackPanel>

                                                    </Grid>
                                                </TabItem>

                                            </TabControl>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Popup>
                            
                        </Grid>
                    </Border>

                </Grid>

            </Grid>
        </Border>
    </DataTemplate>

    <!-- Point Template -->
    <DataTemplate x:Key="PointNormal">
        <Border BorderThickness="0,0,0,1" MinHeight="70" HorizontalAlignment="Stretch" BorderBrush="#FFAA9696" >
            <Grid Background="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Name="SubBorder" Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="#FFDEDEDE" >
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                    <Setter Property="Background" Value="#FBFBFB">
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Color="#FFFFE800" Offset="0" />
                                                <GradientStop Color="Orange" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Border.ToolTip>
                        <ToolTip Background="#FFFFA9A9" MaxWidth="200">
                            <TextBlock Text="{Binding Inner.ErrorMsg}" Style="{StaticResource FarsiTextBlock}" TextWrapping="Wrap"  />
                            <ToolTip.Style>
                                <Style TargetType="ToolTip">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToolTip.Style>
                        </ToolTip>
                    </Border.ToolTip>
                    <Grid>
                        <TextBlock Name="EqCount" Margin="3,1.5,0,0" FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource RowNumberConverter}">
                                    <Binding/>
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="MathObjList" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Image Width="20" Height="20" VerticalAlignment="Center" Margin="0,2,0,0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Error.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </Border>

                <Grid Grid.Column="1"  Margin="0,3,3,3">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="15" />
                    </Grid.ColumnDefinitions>

                    <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource NormalTextBlock}" Margin="10,0,0,0" TextWrapping="Wrap" MaxWidth="180" >
                        <Run Text="{Binding Inner.Name}" FontWeight="Bold" />
                        <Run Text=" ( "/><Run Text="{Binding Inner.Point.X}"/><Run Text=" , "/><Run Text="{Binding Inner.Point.Y}"/><Run Text=" , "/><Run Text="{Binding Inner.Point.Z}"/><Run Text=" )"/>
                    </TextBlock>
                    
                    <Canvas Grid.Column="1" Grid.RowSpan="2" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Ellipse Width="32" Height="32" Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="{Binding Inner.Color}" />
                            </Ellipse.Fill>
                         </Ellipse>
                         <Image Width="32" Height="32" VerticalAlignment="Center" 
                                Source="{Binding Converter={StaticResource OvConverter}}"
                                Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}" />
                         <Ellipse Width="32" Height="32" VerticalAlignment="Center" Stroke="LightGray" StrokeThickness="2" Fill="Transparent"
                                  Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter},ConverterParameter=Not}" />
                    </Canvas>

                    <Button Grid.Column="2" Command="{x:Static local:MainWindow.DeleteCommand}" 
                            CommandParameter="{Binding}" Style="{StaticResource CloseButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2,2,0"/>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="PointSelected">
        <Border BorderThickness="0,0,0,1" MinHeight="70" HorizontalAlignment="Stretch" BorderBrush="#FFAA9696">
            <Grid Background="LightGray">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Name="SubBorder" Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="#FFDEDEDE" Background="LightGray" >
                    <Border.ToolTip>
                        <ToolTip Background="#FFFFA9A9" MaxWidth="200">
                            <TextBlock Text="{Binding Inner.ErrorMsg}" Style="{StaticResource FarsiTextBlock}" TextWrapping="Wrap"/>
                            <ToolTip.Style>
                                <Style TargetType="ToolTip">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToolTip.Style>
                        </ToolTip>
                    </Border.ToolTip>
                    <Grid>
                        <TextBlock Name="EqCount" Margin="3,1.5,0,0" FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource RowNumberConverter}">
                                    <Binding/>
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="MathObjList" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Image Width="20" Height="20" VerticalAlignment="Center" Margin="0,2,0,0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Innner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Error.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </Border>

                <Grid Background="White" Grid.Column="1"  Margin="0,3,3,3">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" MinHeight="70" />
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="15" />
                    </Grid.ColumnDefinitions>

                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" MaxWidth="180">
                        <TextBox Style="{StaticResource NormalTextBox}" Text="{Binding Inner.Name}" FontWeight="Bold"
                                 MinWidth="20" Margin="0,0,4,0" />
                        <TextBlock Style="{StaticResource NormalTextBlock}" Text="(" />
                        <TextBox Style="{StaticResource NormalTextBox}" Text="{Binding Inner.Point.X,UpdateSourceTrigger=PropertyChanged}" 
                                 MinWidth="20" Margin="4,0,4,0" />
                        <TextBlock Style="{StaticResource NormalTextBlock}" Text="," />
                        <TextBox Style="{StaticResource NormalTextBox}" Text="{Binding Inner.Point.Y,UpdateSourceTrigger=PropertyChanged}" 
                                 MinWidth="20" Margin="4,0,4,0" />
                        <TextBlock Style="{StaticResource NormalTextBlock}" Text="," />
                        <TextBox Style="{StaticResource NormalTextBox}" Text="{Binding Inner.Point.Z,UpdateSourceTrigger=PropertyChanged}" 
                                 MinWidth="20" Margin="4,0,4,0" />
                        <TextBlock Style="{StaticResource NormalTextBlock}" Text=")" />
                    </WrapPanel>

                    <Canvas Grid.Column="1" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Ellipse Width="32" Height="32"
                                  Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="{Binding Inner.Color}" />
                            </Ellipse.Fill>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.ChangeVisibilityCommand}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Ellipse>
                        <Image Width="32" Height="32" VerticalAlignment="Center" 
                               Source="{Binding Converter={StaticResource OvConverter}}"
                                Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.ChangeVisibilityCommand}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Image>
                        <Ellipse Width="32" Height="32" VerticalAlignment="Center" Stroke="LightGray" StrokeThickness="2" Fill="Transparent"
                                 Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter},ConverterParameter=Not}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.ChangeVisibilityCommand}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Ellipse>
                    </Canvas>

                    <Button Grid.Column="2" Command="{x:Static local:MainWindow.DeleteCommand}" 
                            CommandParameter="{Binding}" Style="{StaticResource CloseButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2,2,0"/>
                    
                    <Border Grid.Row="1" Grid.ColumnSpan="3" Background="White">
                        <Border.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Inner.IC}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="0" To="40" Duration="00:00:0.2"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <WrapPanel Grid.Column="0" Orientation="Horizontal">
                                <Button Style="{StaticResource PencilButton}" Margin="14,8,0,0" 
                                        Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding}" />
                                <Button Style="{StaticResource OptionsButton}" Margin="14,8,0,0" 
                                        Command="{x:Static local:MainWindow.OpenOptionCommand}" CommandParameter="{Binding}" />
                            </WrapPanel>

                            <WrapPanel Grid.Column="1" Orientation="Horizontal" FlowDirection="RightToLeft" >
                                <Button Style="{StaticResource CopyButton}" Margin="32,8,0,0" 
                                        Command="{x:Static local:MainWindow.CopyCommand}" CommandParameter="{Binding}"/>
                            </WrapPanel>

                            <Popup x:Name="OptionsPopup" Placement="Center" IsOpen="{Binding IsOptionOpen}" PopupAnimation="Scroll" AllowsTransparency="True"
                                   PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}" >

                                <!-- Draggable Popup -->
                                <i:Interaction.Behaviors>
                                    <local:MouseDragPopupBehavior/>
                                </i:Interaction.Behaviors>

                                <Border BorderBrush="Black" BorderThickness="1" CornerRadius="10" Height="300" Width="400" Background="WhiteSmoke">

                                    <!--Clipper-->
                                    <Border CornerRadius="10">
                                        <Border.Clip>
                                            <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                                <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}"/>
                                            </MultiBinding>
                                        </Border.Clip>

                                        <Grid>
                                            <!-- Popup Close Button -->
                                            <Button Style="{StaticResource CloseButton}" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                    Command="{x:Static local:MainWindow.OpenOptionCommand}" CommandParameter="{Binding}" Margin="7,7,0,0" Panel.ZIndex="1" />

                                            <TabControl FlowDirection="RightToLeft" Panel.ZIndex="0" Margin="0,-3,-3,0">

                                                <TabItem>
                                                    <TabItem.Header>
                                                        <TextBlock Text="تنظیمات نقطه" Style="{StaticResource FarsiTextBlock}" Margin="2,3,0,0"/>
                                                    </TabItem.Header>

                                                    <Grid Margin="0,10,0,0">

                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="2*"/>
                                                            <ColumnDefinition Width="3*"/>
                                                            <ColumnDefinition Width="2*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"
                                                                   Text="نام :" Style="{StaticResource FarsiTextBlock}" 
                                                                   Margin="20,10,0,0"/>

                                                        <TextBox Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                 Margin="0,10,0,0" MinWidth="40" 
                                                                 Text="{Binding Inner.Name, UpdateSourceTrigger=PropertyChanged}" 
                                                                 FontSize="16"  TextAlignment="Center"/>

                                                    </Grid>
                                                </TabItem>

                                                <TabItem>
                                                    <TabItem.Header>
                                                        <TextBlock Text="رنگ و قلمو" Style="{StaticResource FarsiTextBlock}" Margin="2,3,0,0"/>
                                                    </TabItem.Header>

                                                    <Grid Margin="0,10,0,0">

                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="2*"/>
                                                            <ColumnDefinition Width="3*"/>
                                                            <ColumnDefinition Width="2*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <!--Brush Viewer (Beta)-->
                                                        <Canvas Grid.Column="2" Grid.RowSpan="2" Margin="5" >
                                                            <Ellipse Width="64" Height="64">
                                                                <Ellipse.Fill>
                                                                    <SolidColorBrush Color="{Binding Inner.Color}" />
                                                                </Ellipse.Fill>
                                                            </Ellipse>
                                                            <Image Width="64" Height="64" VerticalAlignment="Center" 
                                                                   Source="{Binding Converter={StaticResource OvConverter}}"/>
                                                        </Canvas>

                                                        <!--<StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,5,0,5">
                                                            <CheckBox IsChecked="{Binding Inner.IsVisible, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                                            <TextBlock Text="نمایش نقطه" FontWeight="Normal" FontSize="14" Margin="5,0,5,0"
                                                           FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" />
                                                        </StackPanel>-->

                                                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"
                                                                   Text="تغییر قلمو" Style="{StaticResource FarsiTextBlock}" 
                                                                   Margin="20,10,0,0"/>

                                                        <!--Brush Changer -->
                                                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" 
                                                                    VerticalAlignment="Center" HorizontalAlignment="Left" Margin="-10,10,0,0" >
                                                            <Button Padding="3" Margin="2.5"
                                                                    Command="{x:Static local:MainWindow.SetSolidColorBrushCommand}" CommandParameter="{Binding}" >
                                                                <Image Source="/AKP Math Graph Plotter;component/Images/ColorWheel.png" Width="28" Height="28" />
                                                                <Button.ToolTip>
                                                                    <ToolTip>
                                                                        <TextBlock Text="انتخاب رنگ" Style="{StaticResource FarsiSmallTextBlock}"/>
                                                                    </ToolTip>
                                                                </Button.ToolTip>
                                                            </Button>
                                                        </StackPanel>

                                                        <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="20,10,0,0">
                                                            <CheckBox VerticalAlignment="Center" HorizontalAlignment="Left" FlowDirection="LeftToRight"
                                                                       IsChecked="{Binding Inner.HaveTrial, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <TextBlock Text="رسم دنباله  ( شبیه سازی حرکت جسم )" Margin="5,0,0,0"
                                                                       FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak"/>
                                                        </StackPanel>

                                                        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"
                                                                   Text="طول دنباله :" Style="{StaticResource FarsiTextBlock}"
                                                                   Visibility="{Binding Inner.HaveTrial,Converter={StaticResource VisibilityBoolConverter}}"
                                                                   Margin="20,10,0,0"/>

                                                        <TextBox Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                 Margin="0,10,0,0" MinWidth="40" 
                                                                 Text="{Binding Inner.Trial.Length, UpdateSourceTrigger=PropertyChanged}" 
                                                                 Visibility="{Binding Inner.HaveTrial,Converter={StaticResource VisibilityBoolConverter}}"
                                                                 FontSize="16"  TextAlignment="Center"/>

                                                        <Separator Grid.Row="3" Grid.ColumnSpan="3" Margin="0,10,0,0"/>

                                                        <StackPanel Grid.Row="4" Grid.Column="0" Orientation="Horizontal" Margin="20,10,0,0">
                                                            <CheckBox VerticalAlignment="Center" HorizontalAlignment="Left" FlowDirection="LeftToRight"
                                                                      IsChecked="{Binding Inner.IsLight, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <TextBlock Text="منبع نور" Margin="5,0,5,0"
                                                                       FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" />
                                                        </StackPanel>
                                                        
                                                    </Grid>
                                                </TabItem>

                                            </TabControl>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Popup>

                        </Grid>
                    </Border>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <!-- Vector Template -->
    <DataTemplate x:Key="VectorNormal">
        <Border BorderThickness="0,0,0,1" MinHeight="70" HorizontalAlignment="Stretch" BorderBrush="#FFAA9696" >
            <Grid Background="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Name="SubBorder" Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="#FFDEDEDE" >
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                    <Setter Property="Background" Value="#FBFBFB">
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Color="#FFFFE800" Offset="0" />
                                                <GradientStop Color="Orange" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Border.ToolTip>
                        <ToolTip Background="#FFFFA9A9" MaxWidth="200">
                            <TextBlock Text="{Binding Inner.ErrorMsg}" Style="{StaticResource FarsiTextBlock}" TextWrapping="Wrap"  />
                            <ToolTip.Style>
                                <Style TargetType="ToolTip">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToolTip.Style>
                        </ToolTip>
                    </Border.ToolTip>
                    <Grid>
                        <TextBlock Name="EqCount" Margin="3,1.5,0,0" FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource RowNumberConverter}">
                                    <Binding/>
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="MathObjList" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Image Width="20" Height="20" VerticalAlignment="Center" Margin="0,2,0,0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Error.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </Border>


                <Grid Grid.Column="1"  Margin="0,3,3,3">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="15" />
                    </Grid.ColumnDefinitions>

                    <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource NormalTextBlock}" Margin="10,0,0,0" TextWrapping="Wrap" MaxWidth="180" >
                        <Run Text="{Binding Inner.Name}" FontWeight="Bold" />
                        <Run Text=" ( "/><Run Text="{Binding Inner.Vector.X}"/><Run Text=" , "/><Run Text="{Binding Inner.Vector.Y}"/><Run Text=" , "/><Run Text="{Binding Inner.Vector.Z}"/><Run Text=" )"/>
                    </TextBlock>

                    <Canvas Grid.Column="1" Grid.RowSpan="2" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Ellipse Width="32" Height="32" Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="{Binding Inner.Color}" />
                            </Ellipse.Fill>
                        </Ellipse>
                        <Image Width="32" Height="32" VerticalAlignment="Center" 
                                Source="{Binding Converter={StaticResource OvConverter}}"
                                Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}" />
                        <Ellipse Width="32" Height="32" VerticalAlignment="Center" Stroke="LightGray" StrokeThickness="2" Fill="Transparent"
                                  Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter},ConverterParameter=Not}" />
                    </Canvas>

                    <Button Grid.Column="2" Command="{x:Static local:MainWindow.DeleteCommand}" 
                            CommandParameter="{Binding}" Style="{StaticResource CloseButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2,2,0"/>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="VectorSelected">
        <Border BorderThickness="0,0,0,1" MinHeight="70" HorizontalAlignment="Stretch" BorderBrush="#FFAA9696">
            <Grid Background="LightGray">
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="54"/>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border Name="SubBorder" Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="#FFDEDEDE" Background="LightGray" >
                    <Border.ToolTip>
                        <ToolTip Background="#FFFFA9A9" MaxWidth="200">
                            <TextBlock Text="{Binding ErrorMsg}" FlowDirection="RightToLeft" FontSize="16"
                                       FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Nazanin" TextWrapping="Wrap"  />
                            <ToolTip.Style>
                                <Style TargetType="ToolTip">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToolTip.Style>
                        </ToolTip>
                    </Border.ToolTip>
                    <Grid>
                        <TextBlock Name="EqCount" Margin="3,1.5,0,0" FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource RowNumberConverter}">
                                    <Binding/>
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="MathObjList" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Image Width="20" Height="20" VerticalAlignment="Center" Margin="0,2,0,0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Innner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Error.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </Border>

                <Grid Background="White" Grid.Column="1"  Margin="0,3,3,3">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*" />
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="15" />
                    </Grid.ColumnDefinitions>

                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,10,0,0" MaxWidth="180">
                        <TextBox Style="{StaticResource NormalTextBox}" Text="{Binding Inner.Name}" FontWeight="Bold"
                                 MinWidth="20" Margin="0,0,4,0" />
                        <TextBlock Style="{StaticResource NormalTextBlock}" Text="(" />
                        <TextBox Style="{StaticResource NormalTextBox}" Text="{Binding Inner.Vector.X,UpdateSourceTrigger=PropertyChanged}" 
                                 MinWidth="20" Margin="4,0,4,0" />
                        <TextBlock Style="{StaticResource NormalTextBlock}" Text="," />
                        <TextBox Style="{StaticResource NormalTextBox}" Text="{Binding Inner.Vector.Y,UpdateSourceTrigger=PropertyChanged}" 
                                 MinWidth="20" Margin="4,0,4,0" />
                        <TextBlock Style="{StaticResource NormalTextBlock}" Text="," />
                        <TextBox Style="{StaticResource NormalTextBox}" Text="{Binding Inner.Vector.Z,UpdateSourceTrigger=PropertyChanged}" 
                                 MinWidth="20" Margin="4,0,4,0" />
                        <TextBlock Style="{StaticResource NormalTextBlock}" Text=")" />
                    </WrapPanel>

                    <StackPanel Grid.Row="1" Margin="20,6,0,10" Orientation="Horizontal">
                        <TextBlock Style="{StaticResource SmallTextBlock}" Text="O ="/>
                        <TextBox Style="{StaticResource SmallTextBox}" MinWidth="50" Text="{Binding Inner.PointName,UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>

                    <Canvas Grid.Column="1" Grid.RowSpan="2" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Ellipse Width="32" Height="32"
                                  Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="{Binding Inner.Color}" />
                            </Ellipse.Fill>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.ChangeVisibilityCommand}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Ellipse>
                        <Image Width="32" Height="32" VerticalAlignment="Center" 
                               Source="{Binding Converter={StaticResource OvConverter}}"
                                Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.ChangeVisibilityCommand}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Image>
                        <Ellipse Width="32" Height="32" VerticalAlignment="Center" Stroke="LightGray" StrokeThickness="2" Fill="Transparent"
                                 Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter},ConverterParameter=Not}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.ChangeVisibilityCommand}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Ellipse>
                    </Canvas>

                    <Button Grid.Column="2" Command="{x:Static local:MainWindow.DeleteCommand}" 
                            CommandParameter="{Binding}" Style="{StaticResource CloseButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2,2,0"/>

                    <Border Grid.Row="2" Grid.ColumnSpan="3" Background="White">
                        <Border.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Inner.IC}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="0" To="40" Duration="00:00:0.2"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <WrapPanel Grid.Column="0" Orientation="Horizontal">
                                <Button Style="{StaticResource PencilButton}" Margin="14,8,0,0" 
                                        Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding}" />
                                <Button Style="{StaticResource OptionsButton}" Margin="14,8,0,0" 
                                        Command="{x:Static local:MainWindow.OpenOptionCommand}" CommandParameter="{Binding}" />
                            </WrapPanel>

                            <WrapPanel Grid.Column="1" Orientation="Horizontal" FlowDirection="RightToLeft" >
                                <Button Style="{StaticResource CopyButton}" Margin="32,8,0,0" 
                                        Command="{x:Static local:MainWindow.CopyCommand}" CommandParameter="{Binding}"/>
                            </WrapPanel>


                            <Popup x:Name="OptionsPopup" Placement="Center" IsOpen="{Binding IsOptionOpen}" PopupAnimation="Scroll" AllowsTransparency="True"
                                   PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}" >

                                <!-- Draggable Popup -->
                                <i:Interaction.Behaviors>
                                    <local:MouseDragPopupBehavior/>
                                </i:Interaction.Behaviors>

                                <Border BorderBrush="Black" BorderThickness="1" CornerRadius="10" Height="300" Width="400" Background="WhiteSmoke">

                                    <!--Clipper-->
                                    <Border CornerRadius="10">
                                        <Border.Clip>
                                            <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                                <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}"/>
                                            </MultiBinding>
                                        </Border.Clip>

                                        <Grid>
                                            <!-- Popup Close Button -->
                                            <Button Style="{StaticResource CloseButton}" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                    Command="{x:Static local:MainWindow.OpenOptionCommand}" CommandParameter="{Binding}" Margin="7,7,0,0" Panel.ZIndex="1" />

                                            <TabControl FlowDirection="RightToLeft" Panel.ZIndex="0" Margin="0,-3,-3,0">

                                                <TabItem>
                                                    <TabItem.Header>
                                                        <TextBlock Text="تنظیمات بردار" Style="{StaticResource FarsiTextBlock}" Margin="2,3,0,0"/>
                                                    </TabItem.Header>

                                                    <Grid Margin="0,10,0,0">

                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="2*"/>
                                                            <ColumnDefinition Width="3*"/>
                                                            <ColumnDefinition Width="2*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"
                                                                   Text="نام :" Style="{StaticResource FarsiTextBlock}" 
                                                                   Margin="20,10,0,0"/>

                                                        <TextBox Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                 Margin="0,10,0,0" MinWidth="40" 
                                                                 Text="{Binding Inner.Name, UpdateSourceTrigger=PropertyChanged}" 
                                                                 FontSize="16"  TextAlignment="Center"/>

                                                    </Grid>
                                                </TabItem>

                                                <TabItem>
                                                    <TabItem.Header>
                                                        <TextBlock Text="رنگ و قلمو" Style="{StaticResource FarsiTextBlock}" Margin="2,3,0,0"/>
                                                    </TabItem.Header>

                                                    <Grid Margin="0,10,0,0">

                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="2*"/>
                                                            <ColumnDefinition Width="3*"/>
                                                            <ColumnDefinition Width="2*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <!--Brush Viewer (Beta)-->
                                                        <Canvas Grid.Column="2" Grid.RowSpan="2" Margin="5" >
                                                            <Ellipse Width="64" Height="64">
                                                                <Ellipse.Fill>
                                                                    <SolidColorBrush Color="{Binding Inner.Color}" />
                                                                </Ellipse.Fill>
                                                            </Ellipse>
                                                            <Image Width="64" Height="64" VerticalAlignment="Center" 
                                                                   Source="{Binding Converter={StaticResource OvConverter}}"/>
                                                        </Canvas>

                                                        <!--<StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,5,0,5">
                                                            <CheckBox IsChecked="{Binding Inner.IsVisible, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                                            <TextBlock Text="نمایش نقطه" FontWeight="Normal" FontSize="14" Margin="5,0,5,0"
                                                           FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" />
                                                        </StackPanel>-->

                                                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"
                                                                   Text="تغییر قلمو" Style="{StaticResource FarsiTextBlock}" 
                                                                   Margin="20,10,0,0"/>

                                                        <!--Brush Changer -->
                                                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" 
                                                                    VerticalAlignment="Center" HorizontalAlignment="Left" Margin="-10,10,0,0" >
                                                            <Button Padding="3" Margin="2.5"
                                                                    Command="{x:Static local:MainWindow.SetSolidColorBrushCommand}" CommandParameter="{Binding}" >
                                                                <Image Source="/AKP Math Graph Plotter;component/Images/ColorWheel.png" Width="28" Height="28" />
                                                                <Button.ToolTip>
                                                                    <ToolTip>
                                                                        <TextBlock Text="انتخاب رنگ" Style="{StaticResource FarsiSmallTextBlock}"/>
                                                                    </ToolTip>
                                                                </Button.ToolTip>
                                                            </Button>
                                                        </StackPanel>

                                                        <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="20,10,0,0">
                                                            <CheckBox VerticalAlignment="Center" HorizontalAlignment="Left" FlowDirection="LeftToRight"
                                                                       IsChecked="{Binding Inner.HaveTrial, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <TextBlock Text="رسم جهت بردار (پیکان)" Margin="5,0,0,0"
                                                                       FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak"/>
                                                        </StackPanel>

                                                        <!--<TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"
                                                                   Text="طول دنباله :" Style="{StaticResource FarsiTextBlock}"
                                                                   Visibility="{Binding Inner.HaveTrial,Converter={StaticResource VisibilityBoolConverter}}"
                                                                   Margin="20,10,0,0"/>-->

                                                        <!--<TextBox Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                 Margin="0,10,0,0" MinWidth="40" 
                                                                 Text="{Binding Inner.Trial.Length, UpdateSourceTrigger=PropertyChanged}" 
                                                                 Visibility="{Binding Inner.HaveTrial,Converter={StaticResource VisibilityBoolConverter}}"
                                                                 FontSize="16"  TextAlignment="Center"/>-->

                                                        <Separator Grid.Row="3" Grid.ColumnSpan="3" Margin="0,10,0,0"/>

                                                        <!--<StackPanel Grid.Row="4" Grid.Column="0" Orientation="Horizontal" Margin="20,10,0,0">
                                                            <CheckBox VerticalAlignment="Center" HorizontalAlignment="Left" FlowDirection="LeftToRight"
                                                                      IsChecked="{Binding Inner.IsLight, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <TextBlock Text="منبع نور" Margin="5,0,5,0"
                                                                       FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" />
                                                        </StackPanel>-->

                                                    </Grid>
                                                </TabItem>

                                            </TabControl>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Popup>
                            <!--<Popup x:Name="OptionsPopup" Placement="Center" IsOpen="{Binding IsOptionOpen}" PopupAnimation="Scroll" AllowsTransparency="True"
                               PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}" >
                            <i:Interaction.Behaviors>
                                <local:MouseDragPopupBehavior/>
                            </i:Interaction.Behaviors>

                            <Border BorderBrush="Black" BorderThickness="1" CornerRadius="10" Height="300" Width="400" Background="WhiteSmoke">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="50"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Button Style="{StaticResource CloseButton}" HorizontalAlignment="Left" VerticalAlignment="Top"
                                            Command="{x:Static local:MainWindow.OpenOptionCommand}" CommandParameter="{Binding}" Margin="6,6,0,0"/>

                                    <TextBlock Text="تنظیمات بردار" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Mitra" 
                                               FontSize="24" FontWeight="Bold" HorizontalAlignment="Right" FlowDirection="RightToLeft"
                                               Grid.Column="1" Margin="0,3,10,0" />

                                    <Grid Grid.ColumnSpan="2" Grid.Row="1" FlowDirection="RightToLeft" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="40" />
                                            <ColumnDefinition Width="100" />
                                        </Grid.ColumnDefinitions>

                                            <Canvas Grid.Column="2" Width="64" Height="64" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                    Margin="15,5,15,5">
                                                <Ellipse Width="64" Height="64">
                                                    <Ellipse.Fill>
                                                        <SolidColorBrush Color="{Binding Inner.Color}" />
                                                    </Ellipse.Fill>
                                                </Ellipse>
                                                <Image Width="64" Height="64" VerticalAlignment="Center" 
                                                       Source="/AKP Math Graph Plotter;component/Images/VectorOv.png"/>
                                            </Canvas>


                                        <StackPanel Orientation="Horizontal" >

                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,5,0,5">
                                                <TextBlock Text="نام :" FontWeight="Normal" FontSize="14" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" />
                                                <TextBox Text="{Binding Inner.Name, UpdateSourceTrigger=PropertyChanged}" 
                                                     FontWeight="Normal" FontSize="16" Margin="5,0,5,0" MinWidth="40" />
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,5,0,5">
                                                <CheckBox IsChecked="{Binding Inner.ViewBySphere, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                                <TextBlock Text="نمایش نقطه" FontWeight="Normal" FontSize="14" Margin="5,0,5,0"
                                                           FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" />
                                            </StackPanel>

                                        </StackPanel>

                                        <Button Grid.Column="1" Command="{x:Static local:MainWindow.SetSolidColorBrushCommand}" Padding="3"
                                                    CommandParameter="{Binding}" HorizontalAlignment="Right" VerticalAlignment="Center">
                                            <Image Source="/AKP Math Graph Plotter;component/Images/ColorWheel.png" Width="28" Height="28" />
                                        </Button>

                                    </Grid>
                                </Grid>
                            </Border>
                        </Popup>-->

                    </Grid>
                </Border>
              </Grid>
           </Grid>
        </Border>
    </DataTemplate>

    <!-- Shape Template -->
    <DataTemplate x:Key="ShapeNormal">
        <Border BorderThickness="0,0,0,1" MinHeight="70" HorizontalAlignment="Stretch" BorderBrush="#FFAA9696" >
            <Grid Background="White">
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Name="SubBorder" Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="#FFDEDEDE" >
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                    <Setter Property="Background" Value="#FBFBFB">
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Color="#FFFFE800" Offset="0" />
                                                <GradientStop Color="Orange" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Border.ToolTip>
                        <ToolTip Background="#FFFFA9A9" MaxWidth="200">
                            <TextBlock Text="{Binding Inner.ErrorMsg}" Style="{StaticResource FarsiTextBlock}" TextWrapping="Wrap"  />
                            <ToolTip.Style>
                                <Style TargetType="ToolTip">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToolTip.Style>
                        </ToolTip>
                    </Border.ToolTip>
                    <Grid>
                        <TextBlock Name="EqCount" Margin="3,1.5,0,0" FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource RowNumberConverter}">
                                    <Binding/>
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="MathObjList" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Image Width="20" Height="20" VerticalAlignment="Center" Margin="0,2,0,0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Error.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </Border>

                <Grid Grid.Column="1"  Margin="0,3,3,3">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="15" />
                    </Grid.ColumnDefinitions>

                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource FarsiBoldTextBlock}"
                               TextWrapping="Wrap" Margin="10,0,0,0" MaxWidth="180"
                               Text="{Binding Inner,Converter={StaticResource ShapeTypeConverter}}"/>

                    <Canvas Grid.Column="1" Grid.RowSpan="2" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Ellipse Width="32" Height="32" Fill="{Binding Inner.Brush}"
                                 Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}"/>
                        <Image Width="32" Height="32" VerticalAlignment="Center" 
                                Source="{Binding Converter={StaticResource OvConverter}}"
                                Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}" />
                        <Ellipse Width="32" Height="32" VerticalAlignment="Center" Stroke="LightGray" StrokeThickness="2" Fill="Transparent"
                                  Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter},ConverterParameter=Not}" />
                    </Canvas>

                    <Button Grid.Column="2" Command="{x:Static local:MainWindow.DeleteCommand}" 
                            CommandParameter="{Binding}" Style="{StaticResource CloseButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2,2,0"/>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ShapeSelected">
        <Border BorderThickness="0,0,0,1" MinHeight="70" HorizontalAlignment="Stretch" BorderBrush="#FFAA9696">
            
            <Grid Background="LightGray">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Name="SubBorder" Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="#FFDEDEDE" Background="LightGray" >
                    <Border.ToolTip>
                        <ToolTip Background="#FFFFA9A9" MaxWidth="200">
                            <TextBlock Text="{Binding ErrorMsg}" Style="{StaticResource FarsiTextBlock}" TextWrapping="Wrap"  />
                            <ToolTip.Style>
                                <Style TargetType="ToolTip">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToolTip.Style>
                        </ToolTip>
                    </Border.ToolTip>
                    <Grid>
                        <TextBlock Name="EqCount" Margin="3,1.5,0,0" FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource RowNumberConverter}">
                                    <Binding/>
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="MathObjList" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Image Width="20" Height="20" VerticalAlignment="Center" Margin="0,2,0,0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Innner.HasError}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Inner.HasError}" Value="True">
                                            <Setter Property="Source" Value="/AKP Math Graph Plotter;component/Images/Error.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </Border>

                <Grid Background="White" Grid.Column="1"  Margin="0,3,3,0">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="15" />
                    </Grid.ColumnDefinitions>
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition MinHeight="70" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <WrapPanel Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10" MaxWidth="180" FlowDirection="RightToLeft" >


                        <StackPanel Orientation="Horizontal"  Margin="5,2.5,5,2.5" 
                                    Visibility="{Binding Inner.Type,Converter={StaticResource VisibilityShapeType},ConverterParameter=L}">
                            <TextBlock Text="طول :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.Length,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="20" TextAlignment="Right" Margin="3,0,0,0" >
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>


                        <StackPanel Orientation="Horizontal"  Margin="5,2.5,5,2.5" 
                                    Visibility="{Binding Inner.Type,Converter={StaticResource VisibilityShapeType},ConverterParameter=W}">
                            <TextBlock Text="عرض :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.Width,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="20" TextAlignment="Right" Margin="3,0,0,0" >
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>


                        <StackPanel Orientation="Horizontal"  Margin="5,2.5,5,2.5" 
                                    Visibility="{Binding Inner.Type,Converter={StaticResource VisibilityShapeType},ConverterParameter=H}">
                            <TextBlock Text="ارتفاع :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.Height,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="20" TextAlignment="Right" Margin="3,0,0,0" >
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal"  Margin="5,2.5,5,2.5" 
                                    Visibility="{Binding Inner.Type,Converter={StaticResource VisibilityShapeType},ConverterParameter=R}">
                            <TextBlock Text="شعاع :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.Radius,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="20" TextAlignment="Right" Margin="3,0,0,0" >
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal"  Margin="5,2.5,5,2.5" 
                                    Visibility="{Binding Inner.Type,Converter={StaticResource VisibilityShapeType},ConverterParameter=BR}">
                            <TextBlock Text="شعاع کف :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.Radius,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="20" TextAlignment="Right" Margin="3,0,0,0" >
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal"  Margin="5,2.5,5,2.5" 
                                    Visibility="{Binding Inner.Type,Converter={StaticResource VisibilityShapeType},ConverterParameter=TR}">
                            <TextBlock Text="شعاع سقف :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.Radius2,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="20" TextAlignment="Right" Margin="3,0,0,0">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="5,2.5,5,2.5" 
                                    Visibility="{Binding Inner.Type,Converter={StaticResource VisibilityShapeType},ConverterParameter=RX}">
                            <TextBlock Text="شعاع (X) :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.Radius,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="20" TextAlignment="Right" Margin="3,0,0,0">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="5,2.5,5,2.5" 
                                    Visibility="{Binding Inner.Type,Converter={StaticResource VisibilityShapeType},ConverterParameter=RY}">
                            <TextBlock Text="شعاع (Y) :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.Radius2,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="20" TextAlignment="Right" Margin="3,0,0,0">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="5,2.5,5,2.5" 
                                    Visibility="{Binding Inner.Type,Converter={StaticResource VisibilityShapeType},ConverterParameter=RY}">
                            <TextBlock Text="شعاع (Z) :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.Radius3,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="20" TextAlignment="Right" Margin="3,0,0,0">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal"  Margin="5,2.5,5,2.5" 
                                    Visibility="{Binding Inner.Type,Converter={StaticResource VisibilityShapeType},ConverterParameter=N}">
                            <TextBlock Text="تعداد وجه :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.FaceCount,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="20" TextAlignment="Right" Margin="3,0,0,0">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal"  Margin="5,2.5,5,2.5" 
                                    Visibility="{Binding Inner.Type,Converter={StaticResource VisibilityShapeType},ConverterParameter=CF}">
                            <TextBlock Text="اینام وجه مکعب :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.CubeFace,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="20" TextAlignment="Right" Margin="3,0,0,0">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal"  Margin="5,2.5,5,2.5" >
                            <TextBlock Text="نقطه مبدا :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.PointName,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="50" TextAlignment="Right" Margin="3,0,0,0">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal"  Margin="5,2.5,5,2.5"
                                    Visibility="{Binding Inner.Type,Converter={StaticResource VisibilityShapeType},ConverterParameter=VE}">
                            <TextBlock Text="بردار جهت :" Style="{StaticResource FarsiTextBlock}" />
                            <TextBox Text="{Binding Inner.VectorName,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NormalTextBox}"
                                     FlowDirection="LeftToRight" TextWrapping="NoWrap" MinWidth="50" TextAlignment="Right" Margin="3,0,0,0">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" ></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>

                    </WrapPanel>

                    <Canvas Grid.Column="1" Grid.RowSpan="2" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Ellipse Width="32" Height="32" Fill="{Binding Inner.Brush}"
                                  Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.ChangeVisibilityCommand}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Ellipse>
                        <Image Width="32" Height="32" VerticalAlignment="Center" 
                               Source="{Binding Converter={StaticResource OvConverter}}"
                                Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.ChangeVisibilityCommand}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Image>
                        <Ellipse Width="32" Height="32" VerticalAlignment="Center" Stroke="LightGray" StrokeThickness="2" Fill="Transparent"
                                 Visibility="{Binding Inner.IsVisible,Converter={StaticResource VisibilityBoolConverter},ConverterParameter=Not}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{x:Static local:MainWindow.ChangeVisibilityCommand}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Ellipse>
                    </Canvas>

                    <Button Grid.Column="2" Command="{x:Static local:MainWindow.DeleteCommand}" 
                            CommandParameter="{Binding}" Style="{StaticResource CloseButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2,2,0"/>

                    <Border Grid.Row="2" Grid.ColumnSpan="3" Background="White">
                        <Border.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Inner.IC}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="0" To="40" Duration="00:00:0.2"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <WrapPanel Grid.Column="0" Orientation="Horizontal">
                                <Button Style="{StaticResource PencilButton}" Margin="14,8,0,0" 
                                        Command="{x:Static local:MainWindow.DrawCommand}" CommandParameter="{Binding}" />
                                <Button Style="{StaticResource OptionsButton}" Margin="14,8,0,0" 
                                        Command="{x:Static local:MainWindow.OpenOptionCommand}" CommandParameter="{Binding}" />
                            </WrapPanel>

                            <WrapPanel Grid.Column="1" Orientation="Horizontal" FlowDirection="RightToLeft" >
                                <Button Style="{StaticResource CopyButton}" Margin="32,8,0,0"
                                        Command="{x:Static local:MainWindow.CopyCommand}" CommandParameter="{Binding}"/>
                            </WrapPanel>


                            <Popup x:Name="OptionsPopup" Placement="Center" IsOpen="{Binding IsOptionOpen}" PopupAnimation="Scroll" AllowsTransparency="True"
                               PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}" >

                                <!-- Draggable Popup -->
                                <i:Interaction.Behaviors>
                                    <local:MouseDragPopupBehavior/>
                                </i:Interaction.Behaviors>

                                <Border BorderBrush="Black" BorderThickness="1" CornerRadius="10" Height="300" Width="400" Background="WhiteSmoke">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="50"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <Button Style="{StaticResource CloseButton}" HorizontalAlignment="Left" VerticalAlignment="Top"
                                            Command="{x:Static local:MainWindow.OpenOptionCommand}" CommandParameter="{Binding}" Margin="6,6,0,0"/>

                                        <TextBlock Text="تنظیمات شکل" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Mitra" 
                                               FontSize="24" FontWeight="Bold" HorizontalAlignment="Right" FlowDirection="RightToLeft"
                                               Grid.Column="1" Margin="0,3,10,0" />

                                        <Grid Grid.ColumnSpan="2" Grid.Row="1" FlowDirection="RightToLeft" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="80" />
                                                <ColumnDefinition Width="100" />
                                            </Grid.ColumnDefinitions>
                                            
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Canvas Grid.Column="2" Width="64" Height="64" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                    Margin="15,5,15,5">
                                                <Ellipse Width="64" Height="64" Fill="{Binding Inner.Brush}"/>
                                                <Image Width="64" Height="64" VerticalAlignment="Center" 
                                                       Source="/AKP Math Graph Plotter;component/Images/ShapeOv.png"/>
                                            </Canvas>

                                            <StackPanel Orientation="Horizontal" >

                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,5,0,5">
                                                    <TextBlock Text="نام :" FontWeight="Normal" FontSize="14" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" />
                                                    <TextBox Text="{Binding Inner.Name, UpdateSourceTrigger=PropertyChanged}" 
                                                     FontWeight="Normal" FontSize="16" Margin="5,0,5,0" MinWidth="40" />
                                                </StackPanel>
                                                
                                                <ComboBox ItemsSource="{Binding Source={StaticResource ShapeEnum}}" SelectedItem="{Binding Inner.Type,UpdateSourceTrigger=PropertyChanged}" Margin="15,2.5,0,2.5" VerticalAlignment="Center" />

                                                <!--<StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,5,0,5">
                                                <CheckBox IsChecked="{Binding Inner.ViewBySphere, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                                <TextBlock Text="نمایش نقطه" FontWeight="Normal" FontSize="14" Margin="5,0,5,0"
                                                           FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" />
                                            </StackPanel>-->

                                            </StackPanel>


                                            <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" >

                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,5,0,5">
                                                    <TextBlock Text="تسقیمات تتا :" FontWeight="Normal" FontSize="14" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" />
                                                    <TextBox Text="{Binding Inner.ThetaDiv, UpdateSourceTrigger=PropertyChanged}" 
                                                             FontWeight="Normal" FontSize="16" Margin="5,0,5,0" MinWidth="40" />
                                                </StackPanel>

                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,5,0,5">
                                                    <TextBlock Text="تسقیمات فی :" FontWeight="Normal" FontSize="14" FontFamily="/AKP Math Graph Plotter;component/Fonts/Farsi/#B Koodak" />
                                                    <TextBox Text="{Binding Inner.PhiDiv, UpdateSourceTrigger=PropertyChanged}" 
                                                             FontWeight="Normal" FontSize="16" Margin="5,0,5,0" MinWidth="40" />
                                                </StackPanel>

                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                                <Button Command="{x:Static local:MainWindow.SetSolidColorBrushCommand}" CommandParameter="{Binding}"
                                                        Padding="3" Margin="2.5" >
                                                    <Image Source="/AKP Math Graph Plotter;component/Images/ColorWheel.png" Width="28" Height="28" />
                                                </Button>
                                                <Button Command="{x:Static local:MainWindow.SetImageBrushCommand}" CommandParameter="{Binding}"
                                                        Padding="3" Margin="2.5" >
                                                    <Image Source="/AKP Math Graph Plotter;component/Images/Image.png" Width="28" Height="28" />
                                                </Button>
                                            </StackPanel>

                                        </Grid>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="ListItemStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                        <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ContentTemplate" Value="{StaticResource ItemTemplate}" />-->
        <Style.Triggers>
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="0"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentTemplate" Value="{StaticResource EquationNormal}" />
            </MultiDataTrigger>
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding Type}" Value="0"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentTemplate" Value="{StaticResource EquationSelected}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="1"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentTemplate" Value="{StaticResource VariableNormal}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding Type}" Value="1"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentTemplate" Value="{StaticResource VariableSelected}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="2"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentTemplate" Value="{StaticResource PointNormal}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding Type}" Value="2"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentTemplate" Value="{StaticResource PointSelected}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="3"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentTemplate" Value="{StaticResource VectorNormal}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding Type}" Value="3"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentTemplate" Value="{StaticResource VectorSelected}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="4"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentTemplate" Value="{StaticResource ShapeNormal}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding Type}" Value="4"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentTemplate" Value="{StaticResource ShapeSelected}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="99"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentTemplate" Value="{StaticResource AddNewObject}" />
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="ListBoxStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="0" Name="Bd" 
                            Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True" Padding="0" Margin="0">
                        <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
   
        <!-- Override Layout -->
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListItemStyle}" />
        <!-- Its Better To Bind ItemsSource From MainWindow (XP & Old Windows) -->
        <!-- <Setter Property="ItemsSource" Value="{Binding Source={StaticResource EquationList}}" /> -->
        
    </Style>

</ResourceDictionary>
